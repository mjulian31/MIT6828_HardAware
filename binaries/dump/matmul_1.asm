//
// Generated by LLVM NVPTX Back-End
//

.version 6.0
.target sm_61
.address_size 64

	// .globl	_Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32 // -- Begin function _Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32
// __static_shmem_285 has been demoted
// __static_shmem_286 has been demoted
.weak .global .align 8 .u64 exception_flag;
                                        // @_Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32
.visible .entry _Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32(
	.param .u64 _Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32_param_0,
	.param .u64 _Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32_param_1,
	.param .u64 _Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32_param_2,
	.param .u32 _Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32_param_3
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<10>;
	.reg .f64 	%fd<15>;
	.reg .b64 	%rd<74>;
	// demoted variable
	.shared .align 32 .b8 __static_shmem_285[8448];
	// demoted variable
	.shared .align 32 .b8 __static_shmem_286[8448];
// %bb.0:                               // %top
	ld.param.u64 	%rd28, [_Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32_param_0];
	ld.param.s32 	%rd1, [_Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32_param_3];
	mov.u32 	%r2, %ctaid.x;
	add.s32 	%r3, %r2, 1;
	setp.lt.s64 	%p1, %rd1, 32;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r1, %tid.x;
	add.s32 	%r5, %r1, 1;
	cvt.u64.u32 	%rd2, %r5;
	mov.u32 	%r6, %tid.y;
	add.s32 	%r7, %r6, 1;
	shr.s64 	%rd31, %rd1, 63;
	shr.u64 	%rd32, %rd31, 59;
	add.s64 	%rd33, %rd1, %rd32;
	shr.s64 	%rd34, %rd33, 5;
	add.s64 	%rd35, %rd34, -1;
	selp.b64 	%rd4, -1, %rd35, %p1;
	setp.gt.s64 	%p2, %rd4, -1;
	mul.wide.u32 	%rd5, %r3, 32;
	shl.b32 	%r8, %r4, 5;
	add.s32 	%r9, %r7, %r8;
	cvt.u64.u32 	%rd6, %r9;
	max.s64 	%rd68, %rd1, 0;
	@%p2 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L74.preheader
	ld.param.u64 	%rd30, [_Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32_param_2];
	ld.param.u64 	%rd29, [_Z12julia_matmul3PtrI7Float64ES_IS0_ES_IS0_E5Int32_param_1];
	cvt.u64.u32 	%rd3, %r7;
	add.s64 	%rd10, %rd3, -1;
	add.s64 	%rd37, %rd2, %rd5;
	add.s64 	%rd72, %rd37, -33;
	mul.lo.s64 	%rd38, %rd3, 33;
	cvt.u64.u32 	%rd12, %r1;
	add.s64 	%rd39, %rd12, %rd38;
	shl.b64 	%rd40, %rd39, 3;
	add.s64 	%rd41, %rd40, -272;
	mov.u64 	%rd42, __static_shmem_285;
	add.s64 	%rd13, %rd42, %rd41;
	add.s64 	%rd73, %rd6, -1;
	mul.lo.s64 	%rd15, %rd73, %rd68;
	mov.u64 	%rd43, __static_shmem_286;
	add.s64 	%rd16, %rd43, %rd41;
	mul.wide.u32 	%rd44, %r1, 8;
	add.s64 	%rd20, %rd42, %rd44;
	shl.b64 	%rd45, %rd38, 3;
	add.s64 	%rd46, %rd45, %rd43;
	add.s64 	%rd18, %rd46, -256;
	mov.u64 	%rd36, 0;
	mov.f64 	%fd13, 0d0000000000000000;
	add.s64 	%rd56, %rd12, %rd15;
	mov.u64 	%rd69, %rd36;
LBB0_3:                                 // %L74
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_4 Depth 2
	shl.b64 	%rd48, %rd69, 5;
	add.s64 	%rd49, %rd10, %rd48;
	mul.lo.s64 	%rd50, %rd49, %rd68;
	add.s64 	%rd51, %rd12, %rd5;
	add.s64 	%rd52, %rd51, %rd50;
	shl.b64 	%rd53, %rd52, 3;
	add.s64 	%rd54, %rd53, %rd29;
	ld.global.u64 	%rd55, [%rd54+-256];
	st.shared.u64 	[%rd13+8], %rd55;
	add.s64 	%rd57, %rd56, %rd48;
	shl.b64 	%rd58, %rd57, 3;
	add.s64 	%rd59, %rd58, %rd30;
	ld.global.u64 	%rd60, [%rd59];
	st.shared.u64 	[%rd16+8], %rd60;
	bar.sync 	0;
	mov.u64 	%rd70, %rd36;
	mov.u64 	%rd71, %rd20;
LBB0_4:                                 // %L281
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	ld.shared.f64 	%fd6, [%rd71];
	add.s64 	%rd61, %rd18, %rd70;
	ld.shared.f64 	%fd7, [%rd61+-8];
	fma.rn.f64 	%fd8, %fd6, %fd7, %fd13;
	ld.shared.f64 	%fd9, [%rd71+264];
	ld.shared.f64 	%fd10, [%rd61];
	fma.rn.f64 	%fd13, %fd9, %fd10, %fd8;
	add.s64 	%rd71, %rd71, 528;
	add.s64 	%rd70, %rd70, 16;
	setp.ne.s64 	%p3, %rd70, 256;
	@%p3 bra 	LBB0_4;
// %bb.5:                               // %L387
                                        //   in Loop: Header=BB0_3 Depth=1
	bar.sync 	0;
	add.s64 	%rd25, %rd69, 1;
	setp.ne.s64 	%p4, %rd69, %rd4;
	mov.u64 	%rd69, %rd25;
	@%p4 bra 	LBB0_3;
	bra.uni 	LBB0_6;
LBB0_1:                                 // %top.L400_crit_edge
	add.s64 	%rd73, %rd6, -1;
	add.s64 	%rd62, %rd2, %rd5;
	add.s64 	%rd72, %rd62, -33;
	mov.f64 	%fd13, 0d0000000000000000;
LBB0_6:                                 // %L400
	mul.lo.s64 	%rd64, %rd73, %rd68;
	add.s64 	%rd65, %rd72, %rd64;
	shl.b64 	%rd66, %rd65, 3;
	add.s64 	%rd67, %rd28, %rd66;
	st.global.f64 	[%rd67], %fd13;
	ret;
                                        // -- End function
}

